workspace(name = "apollo")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")

maybe(
    http_archive,
    name = "bazel_skylib",
    sha256 = "1dde365491125a3db70731e25658dfdd3bc5dbdfd11b840b3e987ecf043c7ca0",
    url = "https://github.com/bazelbuild/bazel-skylib/releases/download/0.9.0/bazel_skylib-0.9.0.tar.gz",
)

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()

# googletest (GTest and GMock)
http_archive(
    name = "com_google_googletest",
    sha256 = "9dc9157a9a1551ec7a7e43daea9a694a0bb5fb8bec81235d8a1e6ef64c716dcb",
    strip_prefix = "googletest-release-1.10.0",
    url = "https://github.com/google/googletest/archive/release-1.10.0.tar.gz",
)

# TODO(xiaoxq): Alias to help migrate legacy code in other repos. Will remove
# very soon.
new_local_repository(
    name = "gtest",
    build_file_content = """
package(default_visibility = ["//visibility:public"])
cc_library(name = "gtest", deps = ["@com_google_googletest//:gtest"])
cc_library(name = "main", deps = ["@com_google_googletest//:gtest_main"])
    """,
    path = "/usr/include",
)

http_archive(
    name = "rules_proto",
    sha256 = "602e7161d9195e50246177e7c55b2f39950a9cf7366f74ed5f22fd45750cd208",
    strip_prefix = "rules_proto-97d8af4dc474595af3900dd85cb3a29ad28cc313",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/97d8af4dc474595af3900dd85cb3a29ad28cc313.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/97d8af4dc474595af3900dd85cb3a29ad28cc313.tar.gz",
    ],
)

load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")

rules_proto_dependencies()

rules_proto_toolchains()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
    strip_prefix = "gflags-2.2.2",
    urls = ["https://github.com/gflags/gflags/archive/v2.2.2.tar.gz"],
)

http_archive(
    name = "com_google_glog",
    sha256 = "f28359aeba12f30d73d9e4711ef356dc842886968112162bc73002645139c39c",
    strip_prefix = "glog-0.4.0",
    url = "https://github.com/google/glog/archive/v0.4.0.tar.gz",
)

# grpc
http_archive(
    name = "com_github_grpc_grpc",
    sha256 = "2fcb7f1ab160d6fd3aaade64520be3e5446fc4c6fa7ba6581afdc4e26094bd81",
    strip_prefix = "grpc-1.26.0",
    url = "https://github.com/grpc/grpc/archive/v1.26.0.tar.gz",
)

load("@com_github_grpc_grpc//bazel:grpc_deps.bzl", "grpc_deps")

grpc_deps()

load("@com_github_grpc_grpc//bazel:grpc_extra_deps.bzl", "grpc_extra_deps")

grpc_extra_deps()

# Cpplint
http_archive(
    name = "cpplint",
    build_file = "cpplint.BUILD",
    sha256 = "96db293564624543a2fd3b1a0d23f663b8054c79853a5918523655721a9f6b53",
    strip_prefix = "cpplint-1.4.5",
    urls = ["https://github.com/cpplint/cpplint/archive/1.4.5.tar.gz"],
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "a79d19dcdf9139fa4b81206e318e33d245c4c9da1ffed21c87288ed4380426f9",
    strip_prefix = "protobuf-3.11.4",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/v3.11.4.tar.gz"],
)

# ad-rss-lib
http_archive(
    name = "ad_rss_lib",
    build_file = "third_party/rss_lib.BUILD",
    sha256 = "10c161733a06053f79120f389d2d28208c927eb65759799fb8d7142666b61b9f",
    strip_prefix = "ad-rss-lib-1.1.0",
    urls = ["https://github.com/intel/ad-rss-lib/archive/v1.1.0.tar.gz"],
)

## eigen
#http_archive(
#    name = "eigen",
#    build_file = "third_party/eigen.BUILD",
#    sha256 = "ba4f95f9082ce99012d5ff320472a0e9fd0be921a20f11912f0bf7e6ca93f240",
#    strip_prefix = "eigen-git-mirror-3.2.10",
#    url = "file:///home/tmp/eigen-3.2.10.tar.gz",
#)
#
## CivetWeb (web server)
#http_archive(
#    name = "civetweb",
#    build_file = "third_party/civetweb.BUILD",
#    sha256 = "de7d5e7a2d9551d325898c71e41d437d5f7b51e754b242af897f7be96e713a42",
#    strip_prefix = "civetweb-1.11",
#    url = "file:///home/tmp/v1.11.tar.gz",
#)
#
##ros
#new_local_repository(
#    name = "ros",
#    build_file = "third_party/ros.BUILD",
#    path = "/home/tmp/ros",
#)
#
## PCL 1.9
#new_local_repository(
#    name = "pcl",
#    build_file = "third_party/pcl.BUILD",
#    path = "/usr/local/include/pcl-1.9",
#)
#
#new_local_repository(
#    name = "glew",
#    build_file = "third_party/glew.BUILD",
#    path = "/usr/include",
#)
#
#new_local_repository(
#    name = "qt",
#    build_file = "third_party/qt.BUILD",
#    path = "/usr/local/qt5/include",
#)
#
#new_local_repository(
#    name = "opengl",
#    build_file = "third_party/opengl.BUILD",
#    path = "/usr/include",
#)
#
#new_local_repository(
#    name = "glfw",
#    build_file = "third_party/glfw.BUILD",
#    path = "/usr/include",
#)
#
#new_local_repository(
#    name = "vtk",
#    build_file = "third_party/vtk.BUILD",
#    path = "/usr/include/vtk-VTK_VERSION",
#)
#
## Caffe
#new_local_repository(
#    name = "caffe",
#    build_file = "third_party/caffe.BUILD",
#    path = "/usr/include/caffe",
#)
#
### tensorrt
#new_local_repository(
#    name = "tensorrt",
#    build_file = "third_party/tensorrt.BUILD",
#    path = "/usr/include/tensorrt",
#)
#
## YAML-CPP
#http_archive(
#    name = "com_github_jbeder_yaml_cpp",
#    build_file = "third_party/yaml_cpp.BUILD",
#    strip_prefix = "yaml-cpp-yaml-cpp-0.5.3",
#    url = "file:///home/tmp/yaml-cpp-0.5.3.zip",
#)
#
#http_archive(
#    name = "qpOASES",
#    build_file = "third_party/qpOASES.BUILD",
#    sha256 = "e70b49586b58b8f5fd348e951f3c3094ed0ad371a96097a499f343a7aeec7dbe",
#    strip_prefix = "qp-oases-3.2.1-1",
#    url = "file:///home/tmp/qp-oases-3.2.1-1.zip",
#)
#
## OSQP
#new_local_repository(
#    name = "osqp",
#    build_file = "third_party/osqp.BUILD",
#    path = "/usr/local/include/osqp/include",
#)
#
## IpOpt
#new_local_repository(
#    name = "ipopt",
#    build_file = "third_party/ipopt.BUILD",
#    path = "/usr/local/ipopt/include",
#)
#
## ADOL-C
#new_local_repository(
#    name = "adolc",
#    build_file = "third_party/adolc.BUILD",
#    path = "/usr/local/adolc/include",
#)
#
## Cuda
#new_local_repository(
#    name = "cuda",
#    build_file = "third_party/cuda.BUILD",
#    path = "/usr/local/cuda",
#)
#
## Local-integ
#new_local_repository(
#    name = "local_integ",
#    build_file = "third_party/local_integ.BUILD",
#    path = "/usr/local/apollo/local_integ",
#)
#
## paddlepaddle
#new_local_repository(
#    name = "paddlepaddle",
#    build_file = "third_party/paddlepaddle.BUILD",
#    path = "/usr/local/apollo/paddlepaddle",
#)
#
## mkldnn
#new_local_repository(
#    name = "mkldnn",
#    build_file = "third_party/mkldnn.BUILD",
#    path = "/usr/local/apollo/local_third_party/mkldnn",
#)
#
## mklml
#new_local_repository(
#    name = "mklml",
#    build_file = "third_party/mklml.BUILD",
#    path = "/usr/local/apollo/local_third_party/mklml",
#)
#
## Proj.4
#http_archive(
#    name = "proj4",
#    build_file = "third_party/proj4.BUILD",
#    strip_prefix = "proj.4-4.9.3",
#    url = "file:///home/tmp/proj.4-4.9.3.zip",
#)
#
## tinyxml2
#http_archive(
#    name = "tinyxml2",
#    build_file = "third_party/tinyxml2.BUILD",
#    strip_prefix = "tinyxml2-5.0.1",
#    url = "file:///home/tmp/tinyxml2-5.0.1.zip",
#)
#
##jsoncpp .so for adv_plat
#new_local_repository(
#    name = "jsoncpp",
#    build_file = "third_party/jsoncpp.BUILD",
#    path = "/usr/local/apollo/jsoncpp/",
#)
#
##xxhash
#new_local_repository(
#    name = "xxhash",
#    build_file = "third_party/xxhash.BUILD",
#    path = "/usr/local/apollo/paddlepaddle_dep/xxhash",
#)
#
##snappystream
#new_local_repository(
#    name = "snappystream",
#    build_file = "third_party/snappystream.BUILD",
#    path = "/usr/local/apollo/paddlepaddle_dep/snappystream",
#)
#
##adv_plat
#http_archive(
#    name = "adv_plat",
#    build_file = "third_party/adv_plat.BUILD",
#    sha256 = "0a58dadab924b520d5b5a58ef82fc0f76c2aa4feaaabd49ec9873228c125d513",
#    url = "https://github.com/ApolloAuto/apollo-contrib/releases/download/v3.0.0/plat-sw-3.0.0.1.zip",
#)
#
new_local_repository(
    name = "fastrtps",
    build_file = "third_party/fastrtps.BUILD",
    path = "/usr/local/fast-rtps",
)

# python
new_local_repository(
    name = "python27",
    build_file = "external/python27.BUILD",
    path = "/usr",
)

new_local_repository(
    name = "python3",
    build_file = "external/python3.BUILD",
    path = "/usr",
)

## PyTorch
#new_local_repository(
#    name = "pytorch",
#    build_file = "third_party/pytorch.BUILD",
#    path = "/usr/local/apollo/libtorch",
#)
#
## PyTorch GPU
#new_local_repository(
#    name = "pytorch_gpu",
#    build_file = "third_party/pytorch_gpu.BUILD",
#    path = "/usr/local/apollo/libtorch_gpu",
#)
#
## ffmpeg
#new_local_repository(
#    name = "ffmpeg",
#    build_file = "third_party/ffmpeg.BUILD",
#    path = "/usr/local/apollo/ffmpeg",
#)
#
#
#new_local_repository(
#    name = "opencv",
#    build_file = "third_party/opencv.BUILD",
#    path = "/usr/include",
#)
# Boost
new_local_repository(
    name = "boost",
    build_file = "third_party/boost.BUILD",
    path = "/usr/include",
)
